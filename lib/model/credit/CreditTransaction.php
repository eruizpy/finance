<?php


/**
 * Skeleton subclass for representing a row from the 'credit_transaction' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sun Feb 20 16:26:33 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.credit
 */
class CreditTransaction extends BaseCreditTransaction 
{
  /**
   * Initializes internal state of CreditTransaction object.
   * @see        parent::__construct()
   */
  public function __construct(Transaction $transaction = null, Credit $credit = null)
  {
    $this->setTransaction($transaction);
    $this->setCredit($credit);
    
    parent::__construct();
  }

  /**
   * Post insert
   * 
   * @param PropelPDO $con 
   */
  public function  postInsert(PropelPDO $con = null) 
  {
    $credit = $this->getCredit();
    $transaction = $this->getTransaction();

    if($this->getTransaction()->isCredit()){

      $credit->setBalance($credit->getBalance() + $transaction->getAmount());

    }elseif($this->getTransaction()->isDebit()){
      
      $credit->setBalance($credit->getBalance() - $transaction->getAmount());
    }

     //update $credit
    $credit->save();
    
    $this->getTransaction()->setType(Transaction::TYPE_CREDIT);
    
    $this->getTransaction()->save($con);

    parent::postInsert($con);
  }  

  /**
   * Get transaction type in format text
   * 
   * @return string 
   */
  public function getTypeOperationText()
  {
    return $this->getTransaction()->getTypeOperationText();
  }
  
  /**
   * Get transactionType
   * 
   * @return TransactionType 
   */
  public function getTransactionType()
  {
    return $this->getTransaction()->getTransactionType();
  }
  
  /**
   * Get connection
   * 
   * @return Connection 
   */
  public function getConnection()
  {
    return $this->getTransaction()->getCash();
  }
  
  /**
   * Get user
   * 
   * @return sfGuardUser 
   */
  public function getUser()
  {
    return $this->getTransaction()->getUser();
  }
  
  /**
   * Get amount
   * 
   * @return type 
   */
  public function getAmount()
  {
    return $this->getTransaction()->getAmount();
  }
  
  /**
   * Get createdAt
   * 
   * @return dataTime 
   */
  public function getCreatedAt($format = 'Y-m-d H:i:s')
  {
    return $this->getTransaction()->getCreatedAt($format);
  }
  
  /**
   * Get Observation
   * 
   * @return type 
   */
  public function getObservation()
  {
    return $this->getTransaction()->getObservation();
  }

} // CreditTransaction
